package br.com.empresa.entidadesTest;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertThrows;

import org.junit.jupiter.api.Test;

import br.com.empresa.entidades.Endereco;

class EnderecoTest {
	
	@Test
	void deve_retornar_logradouro_valido() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		endereco.setLogradouro("Rua");
		assertEquals("Rua", endereco.getLogradouro()); 
	}
	
	@Test
	void nao_deve_aceitar_logradou_null() {

		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		Exception exception = assertThrows(IllegalArgumentException.class, () -> {
			endereco.setLogradouro(null);
		});
		
		String mensagemEsperada = "Valor Inv치lido";
		
		assertEquals(mensagemEsperada, exception.getMessage());
	}
	

	@Test
	void nao_deve_aceitar_logradou_vasio() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		Exception exception = assertThrows(IllegalArgumentException.class, () -> {
			endereco.setLogradouro("");
		});
		
		String mensagemEsperada = "Valor Inv치lido";
		
		assertEquals(mensagemEsperada, exception.getMessage());
	}
	
	@Test
	void deve_retornar_end_valido() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		endereco.setEnd("xv de novembro");
		assertEquals("xv de novembro", endereco.getEnd());
	}
	
	@Test
	void nao_deve_aceitar_end_null() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		Exception exception = assertThrows(IllegalArgumentException.class, () -> {
			endereco.setLogradouro(null);
		});
		
		String mensagemEsperada = "Valor Inv치lido";
		
		assertEquals(mensagemEsperada, exception.getMessage());
	}
	
	@Test
	void nao_deve_aceitar_end_vasio() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		Exception exception = assertThrows(IllegalArgumentException.class, () -> {
			endereco.setLogradouro("");
		});
		
		String mensagemEsperada = "Valor Inv치lido";
		
		assertEquals(mensagemEsperada, exception.getMessage());
	}
	
	@Test
	void deve_retornar_numero_valido() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		assertEquals(280, endereco.getNumero());
	}
	

	@Test
	void test_quantidade_de_caracteres_cep() {
		Endereco endereco = new Endereco(280, "Brasil", "00000000");
		assertEquals(9, endereco.getCep().length());
	}
}
